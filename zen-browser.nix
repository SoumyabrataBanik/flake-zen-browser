# FINAL, OPTIMIZED, AND CORRECTED: zen-browser.nix
# We are removing makeDesktopItem as it's not used, simplifying the signature.
{ pkgs, lib, stdenv, fetchurl, makeWrapper, wrapGAppsHook, autoPatchelfHook }:

stdenv.mkDerivation rec {
    pname = "zen-browser-bin";
    version = "1.14.5b";

    src = fetchurl {
        url = "https://github.com/zen-browser/desktop/releases/download/${version}/zen.linux-x86_64.tar.xz";
        sha256 = "ce3f8952a5e468d6569dd6d86764221bbf2d4582bd6aaa4dc6e8ba3ca314858e";
    };

    nativeBuildInputs = [
        makeWrapper
        autoPatchelfHook
        wrapGAppsHook
    ];

    # This list of dependencies is correct and optimized.
    buildInputs = with pkgs; [
        libGL libGLU libevent libffi libjpeg libpng libstartup_notification libvpx libwebp
        stdenv.cc.cc fontconfig libxkbcommon zlib freetype
        gtk3 libxml2 dbus xcb-util-cursor alsa-lib libpulseaudio pango atk cairo gdk-pixbuf glib
	    udev libva libva-utils mesa libnotify cups pciutils
	    ffmpeg libglvnd pipewire
    ] ++ (with pkgs.xorg; [
        libxcb libX11 libXcursor libXrandr libXi libXext libXcomposite libXdamage
	    libXfixes libXScrnSaver
    ]);

    installPhase = ''
        runHook preInstall

        mkdir -p $out/lib/zen-browser
        cp -r ./* $out/lib/zen-browser/
        chmod +x $out/lib/zen-browser/*

        # CORRECTED: Define `libPath` as a shell variable.
        # The value is generated by Nix's `lib.makeLibraryPath` and injected into the script.
        libPath="${lib.makeLibraryPath buildInputs}"

        # Now we can safely use the `$libPath` shell variable.
        makeWrapper $out/lib/zen-browser/zen-bin $out/bin/zen \
            --prefix LD_LIBRARY_PATH : "$libPath" \
            --set MOZ_LEGACY_PROFILES 1 \
            --set MOZ_ALLOW_DOWNGRADE 1 \
            --set MOZ_APP_LAUNCHER zen \
            --prefix XDG_DATA_DIRS : "$GSETTINGS_SCHEMAS_PATH"

        # Use the same shell variable for the other wrappers.
        makeWrapper $out/lib/zen-browser/updater $out/bin/updater --prefix LD_LIBRARY_PATH : "$libPath"
        makeWrapper $out/lib/zen-browser/glxtest $out/bin/glxtest --prefix LD_LIBRARY_PATH : "$libPath"
        makeWrapper $out/lib/zen-browser/vaapitest $out/bin/vaapitest --prefix LD_LIBRARY_PATH : "$libPath"

        # This part remains correct.
        mkdir -p $out/share/applications
        cat > $out/share/applications/zen-browser.desktop << EOF
        [Desktop Entry]
        Name=Zen Browser
        Comment=${meta.description}
        Exec=zen
        Icon=zen
        Terminal=false
        Type=Application
        Categories=Network;WebBrowser;
        EOF

        install -Dm644 $out/lib/zen-browser/browser/chrome/icons/default/default128.png $out/share/icons/hicolor/128x128/apps/zen.png

        runHook postInstall
    '';

    meta = with lib; {
        description = "A minimalist, privacy-respecting web browser (pre-compiled binary)";
        homepage = "https://zen-browser.app";
        license = with licenses; [ mpl20 ];
        maintainers = with maintainers; [ "hiskingisdone" ];
        platforms = platforms.linux;
        sourceProvenance = [ sourceTypes.binaryNativeCode ];
        mainProgram = "zen";
    };
}
